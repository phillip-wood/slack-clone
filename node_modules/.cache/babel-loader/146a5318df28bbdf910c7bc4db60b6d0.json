{"ast":null,"code":"var _jsxFileName = \"/home/phil/Workspace/slack-clone-challenge/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { useParams } from 'react-router-dom';\nimport ChatInput from '../components/ChatInput';\nimport ChatMessage from './ChatMessage';\nimport db from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat({\n  user\n}) {\n  _s();\n\n  const [channel, setChannel] = useState();\n  const [messages, setMessages] = useState([]);\n\n  const getMessages = () => {\n    db.collection('rooms').doc(channelId).collection('messages').orderBy('timeStamp', 'asc').onSnapshot(snapshot => {\n      let messages = snapshot.docs.map(doc => doc.data());\n      setMessages(messages);\n    });\n  };\n\n  const sendMessage = text => {\n    if (channelId) {\n      let payload = {\n        text: text,\n        user: user.name,\n        photo: user.photo,\n        timestamp\n      };\n    }\n  };\n\n  let {\n    channelId\n  } = useParams();\n\n  const getChannel = () => {\n    db.collection('rooms').doc(channelId).onSnapshot(snapshot => {\n      setChannel(snapshot.data());\n    });\n  };\n\n  useEffect(() => {\n    getChannel();\n    getMessages();\n  }, [channelId]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Channel, {\n        children: [/*#__PURE__*/_jsxDEV(ChannelName, {\n          children: [\"# \", channel && channel.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChannelInfo, {\n          children: \"companu-wide annocuments and work realted matters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChannelDetails, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageContainer, {\n      children: messages.length > 0 && messages.map((data, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        text: data.text,\n        name: data.user,\n        image: data.userImage,\n        timeStamp: data.timeStamp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"RfKf4ZI72qeO8cjjDlKK2XzGIcc=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default Chat;\nconst Container = styled.div`\n    display: grid;\n    grid-template-rows: 64px auto min-content;\n`;\n_c2 = Container;\nconst Header = styled.div`\n    padding-left: 20px;\n    padding-right: 20px;\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid rgb(83, 39, 13);\n    justify-content: space-between;\n`;\n_c3 = Header;\nconst Channel = styled.div`\n\n`;\n_c4 = Channel;\nconst ChannelName = styled.div`\n    font-weight: 700;\n`;\n_c5 = ChannelName;\nconst ChannelInfo = styled.div`\n    font-weight: 400;\n    color: #606060;\n    font-size: 13px;\n    margin-top: 8px;\n`;\n_c6 = ChannelInfo;\nconst ChannelDetails = styled.div`\n    display: flex;\n    align-items: center;\n    color: #606060;\n`;\n_c7 = ChannelDetails;\nconst Info = styled(InfoOutlinedIcon)`\n    margin-left: 10px;\n`;\n_c8 = Info;\nconst MessageContainer = styled.div`\n`;\n_c9 = MessageContainer;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"Channel\");\n$RefreshReg$(_c5, \"ChannelName\");\n$RefreshReg$(_c6, \"ChannelInfo\");\n$RefreshReg$(_c7, \"ChannelDetails\");\n$RefreshReg$(_c8, \"Info\");\n$RefreshReg$(_c9, \"MessageContainer\");","map":{"version":3,"sources":["/home/phil/Workspace/slack-clone-challenge/src/components/Chat.js"],"names":["React","useEffect","useState","styled","InfoOutlinedIcon","useParams","ChatInput","ChatMessage","db","Chat","user","channel","setChannel","messages","setMessages","getMessages","collection","doc","channelId","orderBy","onSnapshot","snapshot","docs","map","data","sendMessage","text","payload","name","photo","timestamp","getChannel","length","index","userImage","timeStamp","Container","div","Header","Channel","ChannelName","ChannelInfo","ChannelDetails","Info","MessageContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined'\nimport { useParams } from 'react-router-dom'\n\nimport ChatInput from '../components/ChatInput'\nimport ChatMessage from './ChatMessage'\nimport db from '../firebase'\n\nfunction Chat( {user }) {\n\n    const [ channel, setChannel ] = useState()\n    const [ messages, setMessages ] = useState([])\n\n    const getMessages = () => {\n        db.collection('rooms')\n        .doc(channelId)\n        .collection('messages')\n        .orderBy('timeStamp', 'asc')\n        .onSnapshot((snapshot) => {\n            let messages = snapshot.docs.map((doc) => doc.data())\n            setMessages(messages)\n        })\n    }\n\n    const sendMessage = (text) => {\n        if(channelId){\n            let payload = {\n                text: text,\n                user: user.name,\n                photo: user.photo,\n                timestamp\n            }\n        }\n    }\n\n    let { channelId } = useParams();\n\n    const getChannel = () => {\n        db.collection('rooms')\n        .doc(channelId)\n        .onSnapshot((snapshot) => {\n            setChannel(snapshot.data())\n        })\n    }\n\n    useEffect(() => {\n        getChannel()\n        getMessages()\n    }, [channelId])\n\n    return (\n        <Container>\n            <Header>\n                <Channel>\n                    <ChannelName>\n                        # { channel && channel.name}\n                    </ChannelName>\n                    <ChannelInfo>\n                        companu-wide annocuments and work realted matters\n                    </ChannelInfo>\n                </Channel>\n                <ChannelDetails>\n                    <div>\n                        Details\n                    </div>\n                    <Info />\n                </ChannelDetails>\n            </Header>\n            <MessageContainer>\n                {\n                   messages.length > 0 &&\n                   messages.map((data, index) => (\n                    <ChatMessage\n                        text={data.text}\n                        name={data.user}\n                        image={data.userImage}\n                        timeStamp={data.timeStamp}\n                    />\n                   ))\n                }\n            </MessageContainer>\n            <ChatInput/>\n        </Container>\n    )\n}\n\nexport default Chat\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-rows: 64px auto min-content;\n`\nconst Header = styled.div`\n    padding-left: 20px;\n    padding-right: 20px;\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid rgb(83, 39, 13);\n    justify-content: space-between;\n`\nconst Channel = styled.div`\n\n`\nconst ChannelName = styled.div`\n    font-weight: 700;\n`\nconst ChannelInfo = styled.div`\n    font-weight: 400;\n    color: #606060;\n    font-size: 13px;\n    margin-top: 8px;\n`\nconst ChannelDetails = styled.div`\n    display: flex;\n    align-items: center;\n    color: #606060;\n`\nconst Info = styled(InfoOutlinedIcon)`\n    margin-left: 10px;\n`\n\nconst MessageContainer = styled.div`\n`\n"]},"metadata":{},"sourceType":"module"}